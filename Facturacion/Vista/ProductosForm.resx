<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="AdjuntarImagenbutton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAALAAAACwARRqq2kAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAADZUlEQVRIS53WS0wTYRAA4L1ovBljOAji++bZI4knD5J4MFHj1QQOatTSfVGKLlhQI2c1amKMr/Ao
        tAJtQUEiGjWSiDYiKkHAR6IRClRqO/O342yzmlKXtTLJ3rrzZR7/v5WcwnhJ671DqNU8xW7PIH6sHsCE
        3oc/tHs4qkUwoobgaFUgUWr9vPDwRanUeAW3T75A4X2OxAB5HiExQAyQ1stPBEkN8dMJQg3CVVdnosR6
        3TnqxsQB4w3GT0WRGKACAFKCQHIHzFf5k3usNPZx+gO46saQGKBlACT7IS23wTEr3eLwfRYH6ycwYwOM
        1DwVlz2P8SwDQa0PYw4AMZCuasmrxPeFNvq+iFkG6DdgRGHKeIE7vc9+bq55Bkd5yJqnX5RXP6QitReb
        GEgvAZC7FebVOwvFVnpJavgmrnMF9AcY5eSjVHxyGJu4goz3CUxqQ7RaH4AdWj+eUyJYpkXguANA7ma4
        kk1+doY2MCAWAW9wpxHFprwZzOoDeFfpS27lFnm0SGq7GsbwkkALb5c/sV5qiKXdDFAO8Np4l9zCQMZ2
        yP0wVX2f1mphPKOEcJcDQFXNcERqnBXhxYC4ZIzAYact0nvgEANevYvWOAFyc6pbaoyJqVzAGMPzdSOo
        /WNNQ3oYbhottJIBWArgOYyaQCIXqB/DYN2IKC/gHLx1d9NGpwoYmDeBVN4MYo3vqciIinEnQI+gWwuh
        /I8ZLJjARB5gblFT7UssYyC+BNBjPKBV5royEHcAJqXGGRGxAdJ80I7VDqe2M9DKwDQDaV7Td9V9KJvJ
        uUWDWggqlC4sk4MQt21RS6qTtygt2wDZq6J2GMN8Xe/SB2lN5RCt0B/83KTfR7d10Cr4oAmtk5EAIx2M
        /FUBypJvmkoZQDsgbwaY06J4FuEKuEVCvQuVWcQPiRwAT/hpXfY0N3wVtwoA8rcoi6hdnDwIQvaLcqUN
        Lv4G5Ga4nk1uhu87lTAw95+AeZvGzRkoAbHbFUxuk/3YbgHz2WsiNxo+if0M2F3XToB52SW4ggtyIBW2
        ZpBxt6b2WmkXx+lJOM5A5j+B3HOQ4TYdsdLZR/17sZ+BuWUAMaU9tc9K4xzmt+BUFG4wAAUAqATg2rL+
        XdQMU4n3ObgYCHkeiXEGkgzM6L0wofZgtxIGl3NiSfoFc5q9T5MghHcAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>