<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="AdjuntarImagenbutton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        rgAAAK4B+ff3XQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAANlSURBVEhLndZL
        TBNhEADgvWi8GWM4COL75tkjiScPkngwUePVBA5q1NJ9UYouWFAjZzVqYoyv8Ci0Am1BQSIaNZKINiIq
        QcBHohEKVGo787fjbLOaUpe1MsneuvNlHv+/lZzCeEnrvUOo1TzFbs8gfqwewITehz+0eziqRTCihuBo
        VSBRav288PBFqdR4BbdPvkDhfY7EAHkeITFADJDWy08ESQ3x0wlCDcJVV2eixHrdOerGxAHjDcZPRZEY
        oAIAUoJAcgfMV/mTe6w09nH6A7jqxpAYoGUAJPshLbfBMSvd4vB9FgfrJzBjA4zUPBWXPY/xLANBrQ9j
        DgAxkK5qyavE94U2+r6IWQboN2BEYcp4gTu9z35urnkGR3nImqdflFc/pCK1F5sYSC8BkLsV5tU7C8VW
        eklq+CaucwX0Bxjl5KNUfHIYm7iCjPcJTGpDtFofgB1aP55TIlimReC4A0DuZriSTX52hjYwIBYBb3Cn
        EcWmvBnM6gN4V+lLbuUWebRIarsaxvCSQAtvlz+xXmqIpd0MUA7w2niX3MJAxnbI/TBVfZ/WamE8o4Rw
        lwNAVc1wRGqcFeHFgLhkjMBhpy3Se+AQA169i9Y4AXJzqltqjImpXMAYw/N1I6j9Y01DehhuGi20kgFY
        CuA5jJpAIheoH8Ng3YgoL+AcvHV300anChiYN4FU3gxije+pyIiKcSdAj6BbC6H8jxksmMBEHmBuUVPt
        SyxjIL4E0GM8oFXmujIQdwAmpcYZEbEB0nzQjtUOp7Yz0MrANANpXtN31X0om8m5RYNaCCqULiyTgxC3
        bVFLqpO3KC3bANmronYYw3xd79IHaU3lEK3QH/zcpN9Ht3XQKvigCa2TkQAjHYz8VQHKkm+aShlAOyBv
        BpjTongW4Qq4RUK9C5VZxA+JHABP+Gld9jQ3fBW3CgDytyiLqF2cPAhC9otypQ0u/gbkZrieTW6G7zuV
        MDD3n4B5m8bNGSgBsdsVTG6T/dhuAfPZayI3Gj6J/QzYXddOgHnZJbiCC3IgFbZmkHG3pvZaaRfH6Uk4
        zkDmP4Hcc5DhNh2x0tlH/Xuxn4G5ZQAxpT21z0rjHOa34FQUbjAABQCoBODasv5d1AxTifc5uBgIeR6J
        cQaSDMzovTCh9mC3EgaXc2JJ+gVzmr1PkyCEdwAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>